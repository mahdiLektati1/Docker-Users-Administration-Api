{
    "openapi": "3.0.0",
    "info": {
        "description": "Mahdi LEKTATI - Ahmed MOKHTARI",
        "version": "1.0.0",
        "title": "Users-Administration-Python-Flask-REST-API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [{
        "url": "/"
    }],
    "tags": [{
        "name": "Users Administration",
        "description": "Example API for requesting and viewing users administration requests"
    }],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "Users Request"
                ],
                "summary": "Returns list of Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/usersRequests"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users Request"
                ],
                "summary": "Create a new user",
                "requestBody": {
                    "description": "user Request Post Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userRequestPostBody"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/users/{id}": {
            "parameters": [{
                "name": "id",
                "in": "path",
                "required": true,
                "description": "ID of the user that we want to match",
                "type": "int"
            }],
            "get": {
                "tags": [
                    "User Request"
                ],
                "summary": "Get user with given ID",
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "User Request id",
                    "schema": {
                        "$ref": "#/components/schemas/id"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/usersRequest"
                        }
                    },
                    "400": {
                        "description": "Failed. Misunderstood Request."
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            },
            "put": {
                "summary": "edit a user by ID",
                "tags": [
                    "User Request"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "User Request id",
                    "schema": {
                        "$ref": "#/components/schemas/id"
                    }
                }],
                "requestBody": {
                    "description": "User Request Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/usersRequest"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/usersRequest"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "tags": [
                    "User Request"
                ],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "User Request Id",
                    "schema": {
                        "$ref": "#/components/schemas/id"
                    }
                }],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/components/schemas/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Misunderstood Request."
                    },
                    "404": {
                        "description": "Failed. Book Request not found."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "id": {
                "properties": {
                    "user_id": {
                        "type": "int"
                    }
                }
            },
            "userRequestPostBody": {
                "type": "object",
                "properties": {
                    "firstname": {
                        "type": "string",
                        "format": "string"
                    },
                    "name": {
                        "type": "string",
                        "format": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                }
            },
            "usersRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "format": "number"
                    },
                    "firstname": {
                        "type": "string",
                        "format": "string"
                    },
                    "name": {
                        "type": "string",
                        "format": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "created": {
                        "type": "string",
                        "format": "datetime"
                    }
                }
            },
            "usersRequests": {
                "type": "object",
                "properties": {
                    "userRequest": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/usersRequest"
                        }
                    }
                }
            }
        }
    }
}